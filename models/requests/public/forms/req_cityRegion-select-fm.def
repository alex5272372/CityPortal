// @! "do not remove comments below unless you know what you do!"
// @isDefault "false"
// @entity "req_cityRegion"
// @formType "custom"
// @caption "Select the city's region name"
// @description "Select the city's region name"

/* global UB Ext $App */

exports.formDef = 'request.selectRegion'
Ext.define('request.selectRegion', {
  extend: 'Ext.form.Panel',
  size: {
    width: 500,
    height: 600
  },
  items: [{
    xtype: 'ubcombobox',
    width: 400,
    name: 'cbxRegion',
    fieldLabel: UB.i18n('City region'),
    allowBlank: false,
    ubRequest: {
      entity: 'req_cityRegion',
      method: 'select',
      fieldList: ['ID', 'name']
    }
  }],
  buttons: [{
    ubID: 'btnOK',
    text: UB.i18n('ok'),
    iconCls: 'fa fa-save',
    formBind: true,
    handler: function () {
      const me = this
      const region = []
      region[0] = me.up('form').getForm().findField('cbxRegion').getValue()
      const regionName = me.up('form').getForm().findField('cbxRegion').findRecordByValue(region[0]).get('name')
      UB.Repository('req_reqList').attrs(['ID', 'regionList']).where('regionList', '=', region).selectAsObject()
        .then(function (result) {
          if (result.length) {
            $App.dialogInfo('Number of requests for the district: ' + regionName + ' - ' + result.length)
          } else {
            $App.dialogInfo('There are any requests for the district: ' + regionName)
          }
        })
    }
  }, {
    ubID: 'btnCancel',
    text: UB.i18n('cancel'),
    iconCls: 'fa fa-times',
    handler: function () {
      const me = this
      me.up('window').close()
    }
  }],

  initComponent: function () {
    const me = this
    me.callParent(arguments)
  }
})
